#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define HRML 1
#define HRMR 2
#define NUM 3
#define FN 4
#define OLD 5
#define MEDIA 6
#define MOD 7

#define HYPER LS(LC(LA(LGUI)))
#define MEH LS(LC(LA))
#define TSKMNG LC(LA(DEL))
#define MO_TOG(layer) &mo_tog layer layer
#define AS(keycode) &as LS(keycode) keycode


/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym1: symbol_1 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp AT>, <&kp PIPE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym2: symbol_2 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACKET>, <&kp CARET>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym3: symbol_3 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACE>, <&kp PERCENT>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym4: symbol_4 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_PARENTHESIS>, <&kp EXCLAMATION>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym5: symdol_5 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp PLUS>, <&kp AMPERSAND>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym6: symbol_6 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp STAR>, <&kp HASH>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym7: symbol_7 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_PARENTHESIS>, <&kp EQUAL>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym8: symbol_8 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACE>, <&kp UNDERSCORE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym9: symbol_9 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACKET>, <&kp DOLLAR>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym0: symbol_0 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

    };


  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp BSLH   &sym1      &sym2      &sym3     &sym4     &sym5  &kp LC(X)                                                          &mo MOD      &sym6  &sym7   &sym8     &sym9    &sym0      &kp FSLH
        &kp GRAVE  &kp SQT    &kp COMMA  &kp DOT   &kp P     &kp Y  &kp LC(C)                                                          &kp INS      &kp F  &kp G   &kp C     &kp R    &kp L      &kp MINUS
        &kp ESC    &kp A      &kp O      &kp E     &kp U     &kp I  &kp LC(V)     &mo HRML   &mo NUM    &mo FN    &mo HRMR             &kp K_CMENU  &kp D  &kp H   &kp T     &kp N    &kp S      &kp TAB
        &caps_word &kp SEMI   &kp Q      &kp J     &kp K     &kp X                           &kp LGUI   &kp RGUI                                    &kp B  &kp M   &kp W     &kp V    &kp Z      &caps_word
        &sl OLD    &kp PG_UP  &kp HOME   &kp LEFT  &kp RIGHT           &bspc_del  &kp RSHFT  &mo MEDIA  &mo MEDIA &mt LSHFT ENTER  &kp SPACE               &kp UP  &kp DOWN  &kp END  &kp PG_DN  &sl OLD
      >;
    };

    layer_hrml {
        bindings = <
    &trans  &trans    &trans    &trans     &trans     &trans   &none                                              &mo MOD      &sym6  &sym7   &sym8     &sym9    &sym0      &kp FSLH
    &trans  &trans    &trans    &trans     &trans     &trans   &none                                              &kp INS      &kp F  &kp G   &kp C     &kp R    &kp L      &kp MINUS
    &trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp RSHFT  &trans   &none        &trans  &trans  &trans  &trans        &kp K_CMENU  &kp D  &kp H   &kp T     &kp N    &kp S      &kp TAB
    &trans  &trans    &trans    &trans     &trans     &trans                        &trans  &trans                             &kp B  &kp M   &kp W     &kp V    &kp Z      &caps_word
    &trans  &trans    &trans    &trans     &trans                   &trans  &trans  &trans  &trans  &trans  &trans                    &kp UP  &kp DOWN  &kp END  &kp PG_DN  &sl FN        
      >;
    };

    layer_hrmr {
        bindings = <
    &kp BSLH   &sym1      &sym2      &sym3     &sym4     &sym5  &kp LC(X)                                              &mo MOD  &trans  &trans     &trans     &trans    &trans    &trans
    &kp GRAVE  &kp SQT    &kp COMMA  &kp DOT   &kp P     &kp Y  &kp LC(C)                                              &none    &trans  &trans     &trans     &trans    &trans    &trans
    &kp ESC    &kp A      &kp O      &kp E     &kp U     &kp I  &kp LC(V)        &trans  &trans  &trans  &trans        &none    &trans  &kp LSHFT  &kp RCTRL  &kp LALT  &kp RGUI  &trans
    &caps_word &kp SEMI   &kp Q      &kp J     &kp K     &kp X                           &trans  &trans                         &trans  &trans     &trans     &trans    &trans    &trans
    &sl FN     &kp PG_UP  &kp HOME   &kp LEFT  &kp RIGHT                 &trans  &trans  &trans  &trans  &trans  &trans                 &trans     &trans     &trans    &trans    &trans
        >;
    };

    layer_num {
        bindings = <
    &trans  &trans    &trans    &trans     &trans     &trans   &none                                                     &mo MOD  &trans  &kp KP_EQUAL  &kp KP_DIVIDE &kp KP_MULTIPLY &trans        &trans
    &trans  &trans    &trans    &trans     &trans     &trans   &none                                                     &none    &trans  &kp N7        &kp N8        &kp N9          &kp KP_MINUS  &trans
    &trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp RSHFT  &trans   &none        &trans     &trans   &trans  &trans           &none    &trans  &kp N4        &kp N5        &kp N6          &kp KP_PLUS   &trans
    &trans  &trans    &trans    &trans     &trans     &trans                           &trans   &trans                            &trans  &kp N1        &kp N2        &kp N3          &kp KP_ENTER  &trans
    &trans  &trans    &trans    &trans     &trans                   &kp DEL &trans     &trans   &trans  &trans  &kp KP_N0                 &kp PG_UP     &kp PG_DN     &kp KP_DOT      &kp RBKT      &trans
        >;
    };

    layer_fn {
        bindings = <
    &trans   &trans     &kp F10   &kp F11   &kp F12  &trans  &none                                                          &mo MOD  &trans  &kp KP_COMMA  &kp KP_EQUAL  &kp KP_DIVIDE &kp KP_MULTIPLY  &trans
    &trans   &trans     &kp F7    &kp F8    &kp F9   &trans  &none                                                          &none    &trans  &kp N7        &kp N8        &kp N9        &kp KP_MINUS     &trans
    &trans   &trans     &kp F4    &kp F5    &kp F6   &trans  &none           &trans     &trans   &trans  &trans             &none    &trans  &kp N4        &kp N5        &kp N6        &kp KP_PLUS      &trans
    &trans   &trans     &kp F1    &kp F2    &kp F3   &trans                             &trans   &trans                              &trans  &kp N1        &kp N2        &kp N3        &kp KP_ENTER     &trans
    &trans   &trans     &trans    &kp HOME  &kp END                  &kp DEL &trans     &trans   &trans  &trans  &kp KP_N0                   &kp PG_UP     &kp PG_DN     &kp KP_DOT    &kp RBKT         &trans
        >;
    };

    layer_old {
        bindings = <
    &trans   &trans     &kp F10   &kp F11   &kp F12  &trans  &none                                                          &mo MOD  &trans  &kp KP_COMMA  &kp KP_EQUAL  &kp KP_DIVIDE &kp KP_MULTIPLY  &trans
    &trans   &trans     &kp F7    &kp F8    &kp F9   &trans  &none                                                          &none    &trans  &kp N7        &kp N8        &kp N9        &kp KP_MINUS     &trans
    &trans   &trans     &kp F4    &kp F5    &kp F6   &trans  &none           &trans     &trans   &trans  &trans             &none    &trans  &kp N4        &kp N5        &kp N6        &kp KP_PLUS      &trans
    &trans   &trans     &kp F1    &kp F2    &kp F3   &trans                             &trans   &trans                              &trans  &kp N1        &kp N2        &kp N3        &kp KP_ENTER     &trans
    &trans   &trans     &trans    &kp HOME  &kp END                  &kp DEL &trans     &trans   &trans  &trans  &kp KP_N0                   &kp PG_UP     &kp PG_DN     &kp KP_DOT    &kp RBKT         &trans
        >;
    };

    layer_media {
        bindings = <
    &trans  &trans  &trans      &trans    &trans    &trans   &none                                               &mo MOD &trans  &trans       &trans       &trans       &trans    &trans
    &trans  &trans  &kp PSCRN   &kp INS   &kp SLCK  &trans   &none                                               &none   &trans  &trans       &kp K_CMENU  &trans       &trans    &trans
    &trans  &trans  &kp TSKMNG  &kp PSCRN &kp SLCK  &trans   &none        &trans   &trans  &trans  &trans        &none   &trans  &kp C_PREV   &kp C_PP     &kp C_NEXT   &trans    &trans
    &trans  &trans  &trans      &trans    &trans    &trans                         &trans  &trans                        &trans  &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP &trans    &trans
    &trans  &trans  &trans      &trans    &trans                  &trans  &trans   &trans  &trans  &trans  &trans                &trans       &trans       &trans       &trans    &trans
        >;
    };

    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                              &trans                 &none &none      &none      &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                        &bootloader            &none &none      &none      &none &none &none
        &none &none        &none        &none        &none        &none        &none            &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none &none      &none      &none &none &none
        &none &none        &none        &none        &macro_ver   &none                               &none &none                                                        &none &none      &none      &none &none &none
        &none &none        &none        &none        &none                                &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                              &bl BL_INC &bl BL_DEC &none &none &none
      >;
    };

  };
};
