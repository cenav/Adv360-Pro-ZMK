#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define FUN 1
#define MEDIA 2
#define MOD 3

#define HYPER LS(LC(LA(LGUI)))
#define MEH LS(LC(LA))
#define TSKMNG LC(LA(DEL))
#define AS(keycode) &as LS(keycode) keycode


/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      ampspipe: ampersand_pipe {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp AMPERSAND>, <&kp PIPE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      plusn1: plus_number1 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp PLUS>, <&kp N1>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      lbktn2: left_bracket_number2 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACKET>, <&kp N2>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      lbrcn3: left_brace_number3 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACE>, <&kp N3>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      lparn4: left_parenthesis_number4 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      prcntn5: percent_number5 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp PERCENT>, <&kp N5>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      equaln6: equal_number6 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp EQUAL>, <&kp N6>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      rparn7: right_parenthesis_number7 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      rbrcn8: right_brace_number8 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACE>, <&kp N8>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      rbktn9: right_bracket_number9 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACKET>, <&kp N9>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      excln0: exclamation_number0 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp EXCLAMATION>, <&kp N0>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      carethash: caret_hash {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp CARET>, <&kp HASH>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      dllrstar: dollar_star {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp DOLLAR>, <&kp STAR>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };
    };


  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &ampspipe  &plusn1    &lbktn2    &lbrcn3   &lparn4   &prcntn5 &kp LC(X)                                                          &mo MOD      &equaln6  &rparn7  &rbrcn8   &rbktn9    &excln0    &kp DEL
        &kp GRAVE  &kp SQT    &kp COMMA  &kp DOT   &kp P     &kp Y    &kp LC(C)                                                          &kp INS      &kp F     &kp G    &kp C     &kp R      &kp L      &kp MINUS
        &kp ESC    &kp A      &kp O      &kp E     &kp U     &kp I    &kp LC(V)     &kp LCTRL  &kp LALT   &kp LALT  &kp RCTRL            &kp K_CMENU  &kp D     &kp H    &kp T     &kp N      &kp S      &kp TAB
        &kp TILDE  &kp SEMI   &kp Q      &kp J     &kp K     &kp X                             &kp LGUI   &kp RGUI                                    &kp B     &kp M    &kp W     &kp V      &kp Z      &kp FSLH
        &mo FUN    &kp AT     &carethash &kp LEFT  &kp RIGHT             &bspc_del  &kp RSHFT  &mo MEDIA  &mo MEDIA &mt LSHFT ENTER  &kp SPACE                  &kp UP   &kp DOWN  &dllrstar  &kp UNDER  &mo FUN
      >;
    };

    layer_fn {
        bindings = <
    &trans   &trans     &kp F10   &kp F11   &kp F12  &trans  &none                                                          &mo MOD  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE &kp KP_MULTIPLY  &trans
    &trans   &trans     &kp F7    &kp F8    &kp F9   &trans  &none                                                          &none    &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9     &kp KP_MINUS     &trans
    &trans   &trans     &kp F4    &kp F5    &kp F6   &trans  &none           &trans     &trans   &trans  &trans             &none    &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6     &kp KP_PLUS      &trans
    &trans   &trans     &kp F1    &kp F2    &kp F3   &trans                             &trans   &trans                              &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3     &kp KP_ENTER     &trans
    &trans   &trans     &trans    &kp HOME  &kp END                  &kp DEL &trans     &trans   &trans  &trans  &kp KP_N0                   &kp PG_UP   &kp PG_DN     &kp KP_DOT    &kp RBKT         &trans
        >;
    };

    layer_media {
        bindings = <
    &trans  &trans  &trans      &trans    &trans    &trans   &none                                                   &mo MOD &trans  &trans       &trans       &trans       &trans    &trans
    &trans  &trans  &kp PSCRN   &kp INS   &kp SLCK  &trans   &none                                                   &none   &trans  &trans       &kp K_CMENU  &trans       &trans    &trans
    &trans  &trans  &kp TSKMNG  &kp PSCRN &kp SLCK  &trans   &none         &trans   &trans  &trans  &trans           &none   &trans  &kp C_PREV   &kp C_PP     &kp C_NEXT   &trans    &trans
    &trans  &trans  &trans      &trans    &trans    &trans                          &trans  &trans                           &trans  &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP &trans    &trans
    &trans  &trans  &trans      &kp HOME  &kp END                  &trans  &trans   &trans  &trans  &kp K_CMENU  &trans              &kp PG_UP    &kp PG_DN    &trans       &trans    &trans
        >;
    };

    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };

  };
};
