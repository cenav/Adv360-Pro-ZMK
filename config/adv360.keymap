#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define NUM 1
#define FN 2
#define MEDIA 3
#define MOD 4

#define HYPER LS(LC(LA(LGUI)))
#define MEH LS(LC(LA))
#define TSKMNG LC(LA(DEL))
#define AS(keycode) &as LS(keycode) keycode


/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym1: symbol_1 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp AT>, <&kp PIPE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym2: symbol_2 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACKET>, <&kp CARET>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym3: symbol_3 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACE>, <&kp PERCENT>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym4: symbol_4 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_PARENTHESIS>, <&kp EXCLAMATION>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym5: symdol_5 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp PLUS>, <&kp AMPERSAND>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym6: symbol_6 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp STAR>, <&kp HASH>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym7: symbol_7 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_PARENTHESIS>, <&kp EQUAL>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym8: symbol_8 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACE>, <&kp UNDERSCORE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym9: symbol_9 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACKET>, <&kp DOLLAR>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      sym0: symbol_0 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

    };


    keymap {
      compatible = "zmk,keymap";

      default_layer {
        bindings = <
          &kp BSLH   &sym1      &sym2      &sym3     &sym4     &sym5    &kp LC(X)                                                          &mo MOD      &sym6     &sym7    &sym8     &sym9      &sym0      &kp FSLH
          &kp GRAVE  &kp SQT    &kp COMMA  &kp DOT   &kp P     &kp Y    &kp LC(C)                                                          &kp INS      &kp F     &kp G    &kp C     &kp R      &kp L      &kp MINUS
          &kp ESC    &kp A      &kp O      &kp E     &kp U     &kp I    &kp LC(V)     &kp LCTRL  &kp LALT   &kp LALT  &kp RCTRL            &kp K_CMENU  &kp D     &kp H    &kp T     &kp N      &kp S      &kp TAB
          &to NUM    &kp SEMI   &kp Q      &kp J     &kp K     &kp X                             &kp LGUI   &kp RGUI                                    &kp B     &kp M    &kp W     &kp V      &kp Z      &to FN
          &mo NUM    &kp PG_UP  &kp HOME   &kp LEFT  &kp RIGHT             &bspc_del  &kp RSHFT  &mo MEDIA  &to NUM   &mt LSHFT ENTER  &kp SPACE                  &kp UP   &kp DOWN  &kp END    &kp PG_DN  &mo FN
        >;
      };

      layer_num {
        bindings = <
          &trans  &trans  &trans  &trans    &trans    &trans  &none                                                 &mo MOD  &trans  &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &trans        &trans
          &trans  &trans  &trans  &trans    &trans    &trans  &none                                                 &none    &trans  &kp N7       &kp N8        &kp N9          &kp KP_MINUS  &trans
          &to 0   &trans  &trans  &kp LGUI  &kp LALT  &trans  &none         &kp LGUI  &trans  &trans  &trans        &none    &trans  &kp N4       &kp N5        &kp N6          &kp KP_PLUS   &trans
          &trans  &trans  &trans  &trans    &trans    &trans                          &trans  &trans                         &trans  &kp N1       &kp N2        &kp N3          &kp KP_ENTER  &trans
          &trans  &trans  &trans  &trans    &trans                  &trans  &to 0     &trans  &to FN  &trans  &kp N0                 &kp PG_UP    &kp PG_DN     &kp KP_DOT      &kp KP_ENTER  &trans
        >;
      };

      layer_fn {
        bindings = <
          &trans  &trans  &kp F10  &kp F11  &kp F12  &trans  &none                                                 &mo MOD  &trans  &trans    &trans    &trans  &trans  &trans
          &trans  &trans  &kp F7   &kp F8   &kp F9   &trans  &none                                                 &none    &trans  &trans    &trans    &trans  &trans  &trans
          &to 0   &trans  &kp F4   &kp F5   &kp F6   &trans  &none        &trans  &trans    &trans   &trans        &none    &trans  &kp LALT  &kp RGUI  &trans  &trans  &trans
          &trans  &trans  &kp F1   &kp F2   &kp F3   &trans                       &trans    &trans                          &trans  &trans    &trans    &trans  &trans  &trans
          &trans  &trans  &trans   &trans   &trans                &trans  &to 0   &trans    &to NUM  &trans  &trans                 &trans    &trans    &trans  &trans  &trans
        >;
      };

      layer_media {
        bindings = <
          &trans  &trans  &trans      &trans    &trans    &trans   &none                                                &mo MOD &trans  &trans       &trans       &trans       &trans  &trans
          &trans  &trans  &kp PSCRN   &kp INS   &kp SLCK  &trans   &none                                                &none   &trans  &trans       &kp K_CMENU  &trans       &trans  &trans
          &trans  &trans  &kp TSKMNG  &kp PSCRN &kp SLCK  &trans   &none        &trans  &trans    &trans  &trans        &none   &trans  &kp C_PREV   &kp C_PP     &kp C_NEXT   &trans  &trans
          &trans  &trans  &trans      &trans    &trans    &trans                        &trans    &trans                        &trans  &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP &trans  &trans
          &trans  &trans  &trans      &kp HOME  &kp END                 &trans  &trans  &trans    &trans  &trans  &trans                &kp PG_UP    &kp PG_DN    &trans       &trans  &trans
        >;
      };

      mod {
        bindings = <
          &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                             &trans                 &none &none      &none      &none &none &none
          &none &none        &none        &none        &none        &none        &bootloader                                                       &bootloader            &none &none      &none      &none &none &none
          &none &none        &none        &none        &none        &none        &none            &none &none &bt BT_CLR &none                     &rgb_ug RGB_MEFS_CMD 5 &none &none      &none      &none &none &none
          &none &none        &none        &none        &macro_ver   &none                               &none &none                                                       &none &none      &none      &none &none &none
          &none &none        &none        &none        &none                                &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                             &bl BL_INC &bl BL_DEC &none &none &none
        >;
      };

    };
};
