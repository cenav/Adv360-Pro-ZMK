#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define FN 1
#define SYM 2
#define MOD 3

#define HYPER(keycode) LS(LC(LA(LG(keycode))))
#define MEH(keycode) LS(LC(LA(keycode)))
#define AS(keycode) &as LS(keycode) keycode


/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };
    };


  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5 &kp LC(X)                                                               &mo MOD      &kp N6 &kp N7  &kp N8    &kp N9   &kp N0     &bspc_del
        &kp TAB    &kp SQT    &kp COMMA &kp DOT   &kp P     &kp Y  &kp LC(C)                                                               &kp PSCRN    &kp F  &kp G   &kp C     &kp R    &kp L      &kp MINUS
        &kp ESC    &kp A      &kp O     &kp E     &kp U     &kp I  &kp LC(V)       &kp LCTRL &kp LALT   &kp LALT  &mt RCTRL TAB            &kp K_CMENU  &kp D  &kp H   &kp T     &kp N    &kp S      &bspc_del
        &kp TILDE  &kp SEMI   &kp Q     &kp J     &kp K     &kp X                            &kp LGUI   &kp RGUI                                        &kp B  &kp M   &kp W     &kp V    &kp Z      &kp FSLH
        &mo FN     &kp PG_UP  &kp HOME  &kp LEFT  &kp RIGHT               &mo SYM  &hm RSHFT BSPC &kp INS    &kp INS   &mt LSHFT ENTER  &kp SPACE                   &kp UP  &kp DOWN  &kp END  &kp PG_DN  &mo FN
      >;
    };

    layer_fn {
        bindings = <
    &trans   &trans     &kp F10   &kp F11   &kp F12  &trans  &none                                                          &mo MOD  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE &kp KP_MULTIPLY  &trans
    &trans   &trans     &kp F7    &kp F8    &kp F9   &trans  &none                                                          &none    &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9     &kp KP_MINUS     &trans
    &trans   &trans     &kp F4    &kp F5    &kp F6   &trans  &none           &trans     &trans   &trans  &trans             &none    &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6     &kp KP_PLUS      &trans
    &trans   &trans     &kp F1    &kp F2    &kp F3   &trans                             &trans   &trans                              &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3     &kp KP_ENTER     &trans
    &trans   &trans     &trans    &kp HOME  &kp END                  &kp DEL &trans     &trans   &trans  &trans  &kp KP_N0                   &kp PG_UP   &kp PG_DN     &kp KP_DOT    &kp RBKT         &trans
        >;
    };

    layer_symbol {
        bindings = <
    &trans  &trans     &trans        &trans      &trans       &trans     &none                                                   &mo MOD &trans    &trans      &trans      &trans      &trans    &trans
    &trans  &kp GRAVE  &kp LBKT      &kp LBRC    &kp LPAR     &kp SQT    &none                                                   &none   &kp DQT   &kp RPAR    &kp RBRC    &kp RBKT    &kp SEMI  &trans
    &trans  &kp PLUS   &kp CARET     &kp AMPS    &kp EXCL     &kp HASH   &none        &trans   &trans   &trans  &kp BSLH         &none   &kp STAR  &kp EQUAL   &kp UNDER   &kp DLLR    &kp QMARK &trans
    &trans  &kp COLON  &kp TILDE     &kp LT      &kp GT       &trans                           &trans   &trans                           &trans    &kp AT      &kp MINUS   &kp FSLH    &kp PIPE  &trans
    &trans  &trans     &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP                 &trans  &trans   &trans   &trans  &kp PRCNT &trans                   &kp C_PREV  &kp C_PP    &kp C_NEXT  &trans    &trans
        >;
    };

    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };

  };
};
