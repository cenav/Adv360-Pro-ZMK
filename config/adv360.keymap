#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      as: auto_shift {
          compatible = "zmk,behavior-hold-tap";
          label = "AUTO_SHIFT";
          #binding-cells = <2>;
          tapping_term_ms = <150>;
          quick_tap_ms = <0>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
        };

      n1lbk: n1_lbkt {
          compatible = "zmk,behavior-mod-morph";
          label = "n1_lbkt";
          #binding-cells = <0>;
          bindings = <&kp N1>, <&kp LEFT_BRACKET>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n2lpa: n2_lpar {
          compatible = "zmk,behavior-mod-morph";
          label = "n2_lpar";
          #binding-cells = <0>;
          bindings = <&kp N2>, <&kp LEFT_PARENTHESIS>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n3lbr: n3_lbrc {
          compatible = "zmk,behavior-mod-morph";
          label = "n3_lbrc";
          #binding-cells = <0>;
          bindings = <&kp N3>, <&kp LEFT_BRACE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n4sta: n4_star {
          compatible = "zmk,behavior-mod-morph";
          label = "n4_star";
          #binding-cells = <0>;
          bindings = <&kp N4>, <&kp STAR>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n5plu: n5_plus {
          compatible = "zmk,behavior-mod-morph";
          label = "n5_plus";
          #binding-cells = <0>;
          bindings = <&kp N5>, <&kp PLUS>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n6prc: n6_prcnt {
          compatible = "zmk,behavior-mod-morph";
          label = "n6_prcnt";
          #binding-cells = <0>;
          bindings = <&kp N6>, <&kp PERCENT>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n7equ: n7_equal {
          compatible = "zmk,behavior-mod-morph";
          label = "n7_equal";
          #binding-cells = <0>;
          bindings = <&kp N7>, <&kp EQUAL>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n8rbr: n8_rbrc {
          compatible = "zmk,behavior-mod-morph";
          label = "n8_rbrc";
          #binding-cells = <0>;
          bindings = <&kp N8>, <&kp RIGHT_BRACE>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      n9rpa: n9_rpar {
          compatible = "zmk,behavior-mod-morph";
          label = "n9_rpar";
          #binding-cells = <0>;
          bindings = <&kp N9>, <&kp RIGHT_PARENTHESIS>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      n0rbk: n0_rbkt {
        compatible = "zmk,behavior-mod-morph";
        label = "n0_rbkt";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp RIGHT_BRACKET>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      fslbsl: fslh_bslh {
        compatible = "zmk,behavior-mod-morph";
        label = "fslh_bslh";
        #binding-cells = <0>;
        bindings = <&kp SLASH>, <&kp BACKSLASH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      qmaexc: qmark_excl {
        compatible = "zmk,behavior-mod-morph";
        label = "qmark_excl";
        #binding-cells = <0>;
        bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      amppip: amps_pipe {
        compatible = "zmk,behavior-mod-morph";
        label = "amps_pipe";
        #binding-cells = <0>;
        bindings = <&kp AMPERSAND>, <&kp PIPE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      carhas: caret_hash {
        compatible = "zmk,behavior-mod-morph";
        label = "caret_hash";
        #binding-cells = <0>;
        bindings = <&kp CARET>, <&kp HASH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      dllat: dllr_at {
        compatible = "zmk,behavior-mod-morph";
        label = "dllr_at";
        #binding-cells = <0>;
        bindings = <&kp DOLLAR>, <&kp AT_SIGN>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
        bindings = <
    &fslbsl    &n1lbk    &n2lpa    &n3lbr    &n4sta    &n5plu   &none                                                                         &mo MOD     &n6prc   &n7equ   &n8rbr    &n9rpa    &n0rbk   &qmaexc
    &amppip    &kp SQT   &kp COMMA &kp DOT   &kp P     &kp Y    &none                                                                         &tog GAME   &kp F    &kp G    &kp C     &kp R     &kp L    &kp MINUS
    &kp ESC    &kp A     &kp O     &kp E     &kp U     &kp I    &tog QWERTY      &kp LCTRL   &kp LALT      &kp RALT  &kp RCTRL                &kp K_CMENU &kp D    &kp H    &kp T     &kp N     &kp S    &kp TAB
    &kp GRAVE  &kp SEMI  &kp Q     &kp J     &kp K     &kp X                                 &kp DELETE    &kp LGUI                                       &kp B    &kp M    &kp W     &kp V     &kp Z    &kp MINUS
    &mo FN     &carhas   &kp HOME  &kp LEFT  &kp RIGHT          &lt SYMBOL BSPC  &kp RSHFT   &kp INS       &kp INS   &mt LSHFT ENTER  &lt SYMBOL SPACE             &kp UP   &kp DOWN  &kp END   &dllat   &mo FN
       >;
    };

    layer_fn {
        bindings = <
    &trans   &trans     &kp F10   &kp F11   &kp F12  &trans  &none                                                          &mo MOD  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE &kp KP_MULTIPLY  &trans
    &trans   &trans     &kp F7    &kp F8    &kp F9   &trans  &none                                                          &none    &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9     &kp KP_MINUS     &trans
    &trans   &trans     &kp F4    &kp F5    &kp F6   &trans  &tog QWERTY     &trans     &trans   &trans  &trans             &trans   &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6     &kp KP_PLUS      &trans
    &trans   &trans     &kp F1    &kp F2    &kp F3   &trans                             &trans   &trans                              &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3     &kp KP_ENTER     &trans
    &trans   &trans     &trans    &kp HOME  &kp END                  &trans  &trans     &trans   &trans  &trans  &kp KP_N0                   &kp PG_UP   &kp PG_DN     &kp KP_DOT    &kp RBKT         &trans
        >;
    };

    layer_symbol {
        bindings = <
    &trans  &trans   &trans    &trans     &trans    &trans     &none                                                    &mo MOD &trans   &trans    &trans    &trans    &trans    &trans
    &trans  &trans   &kp EXCL  &kp CARET  &kp COLON &trans     &none                                                    &none   &trans   &kp EQUAL &kp DLLR  &kp PRCNT &trans    &trans
    &trans  &kp PLUS &kp LBKT  &kp LBRC   &kp LPAR  &kp GRAVE  &none          &trans  &trans   &trans  &trans           &none   &kp PIPE &kp RPAR  &kp RBRC  &kp RBKT  &kp UNDER &trans
    &trans  &trans   &kp TILDE &kp AT     &kp POUND &trans                            &trans   &trans                           &trans   &kp AMPS  &kp STAR  &kp QMARK &trans    &trans
    &trans  &trans   &trans    &trans     &trans                      &trans  &trans  &trans   &trans  &trans &trans                     &trans    &trans    &trans    &trans    &trans
        >;
    };

    layer_qwerty {
        bindings = <
    &trans  &trans   &trans   &trans   &trans   &trans   &none                                                      &mo MOD &trans  &trans       &trans       &trans           &trans    &trans
    &trans  &kp Q    &kp W    &kp E    &kp R    &kp T    &none                                                      &none   &trans  &kp PSCRN    &kp SLCK     &kp PAUSE_BREAK  &trans    &trans
    &trans  &kp A    &kp S    &kp D    &kp F    &kp G    &tog QWERTY    &trans     &trans  &trans  &trans           &none   &trans  &kp C_PREV   &kp C_PP     &kp C_NEXT       &trans    &trans
      &trans  &kp Z    &kp X    &kp C    &kp V    &kp B                              &trans  &trans                           &trans  &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP     &trans    &trans
      &trans  &trans   &trans   &trans   &trans                   &trans  &kp ENTER  &trans  &trans  &trans  &trans                   &trans       &trans       &trans           &trans    &trans
      >;
    };

    mod {
      bindings = <
          &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
    &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
    &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
    &none &none        &none        &none        &none        &none                                      &none &none                                                        &none        &none        &none        &none &none &none
    &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };

    layer_game {
      bindings = <
          &kp ESC     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5   &kp HOME                                                    &none      &kp N6  &kp N7    &kp N8     &kp N9     &kp N0  &none
    &kp TAB     &kp Q     &kp W     &kp E      &kp R   &kp T    &kp Y                                                       &tog GAME  &none   &none     &none      &none      &none   &none
    &kp BSPC    &kp A     &kp S     &kp D      &kp F   &kp G    &kp H         &kp LCTRL &kp LALT   &kp LGUI   &kp RCTRL     &none      &none   &none     &none      &none      &none   &none
    &kp INS     &kp Z     &kp X     &kp C      &kp V   &kp B                            &kp END    &kp PG_UP                           &none   &none     &none      &none      &none   &none
    &sl GAMEFN  &kp COMMA &kp DOT   &kp LBKT   &kp RBKT             &kp RALT  &kp LSHFT &kp DEL    &kp PG_DN  &kp ENTER  &kp SPACE             &kp UP    &kp DOWN   &none      &none   &mo GAMEFN
        >;
    };

    layer_gamefn {
      bindings = <
          &trans  &kp F1  &kp F2     &kp F3    &kp F4    &kp F5   &kp F6                                               &none  &none  &none  &none  &none  &none  &none
    &trans  &trans  &trans     &trans    &trans    &trans   &trans                                               &none  &none  &none  &none  &none  &none  &none
    &trans  &trans  &kp GRAVE  &kp SEMI  &kp SQT   &trans   &trans         &none      &none   &none  &none       &none  &none  &none  &none  &none  &none  &none
    &trans  &trans  &trans     &trans    &trans    &trans                             &none   &none                     &none  &none  &none  &none  &none  &none
    &trans  &trans  &trans     &kp PG_UP &kp PG_DN              &kp SPACE  &kp ENTER  &none   &none  &none  &none              &none  &none  &none  &none  &none
        >;
    };
  };
};
